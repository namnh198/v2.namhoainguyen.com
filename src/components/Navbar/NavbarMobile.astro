---
import { NavbarItemType } from "~/navigation";
interface Props {
  navigation: NavbarItemType[];
  activeMenu: string;
}
const {navigation, activeMenu} = Astro.props;
---
<div class="flex items-center md:hidden flex-1">
  <button id="toggle-menu" class="p-2.5 -ml-2.5 rounded-lg text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 focus:outline-none flex items-center justify-center">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
    </svg>
  </button>
</div>
<div class="relative z-50" id="mobile-menu">
  <div class="backdrop fixed inset-0 bg-neutral-900 bg-opacity-50 opacity-100"></div>
  <div class="menu fixed inset-y-0 start-0 w-screen max-w-sm overflow-y-auto z-50 opacity-100 -translate-x-full transition-all">
    <div class="flex min-h-full">
      <div class="w-full max-w-sm overflow-hidden transition-all">
        <div class="overflow-y-auto w-full h-screen py-2 transition transform shadow-lg ring-1 dark:ring-neutral-700 bg-white dark:bg-neutral-900 divide-y-2 divide-neutral-100 dark:divide-neutral-800">
          <div class="py-7 px-5">
            <div class="absolute end-2 top-4 p-1">
              <button id="close-menu" class="w-8 h-8 flex items-center justify-center rounded-full text-neutral-700 dark:text-neutral-300 hover:bg-neutral-100 dark:hover:bg-neutral-700  focus:outline-none">
                <span class="sr-only">Close</span>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true" class="w-5 h-5"><path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd"></path></svg>
              </button>
            </div>
          </div>
          <ul class="flex flex-col py-6 px-2 space-y-1 rtl:space-x-reverse">
            {navigation.map(navbar => <li class="text-slate-900 dark:text-white">
              <a href={navbar.permalink} class:list={[
                'group flex gap-x-3 rounded-md p-2.5 ps-4 text-sm leading-6 font-medium capitalize',
                {
                  'text-neutral-500 dark:text-neutral-400 hover:text-neutral-900 hover:bg-neutral-50 dark:hover:bg-neutral-700 dark:hover:text-neutral-300': activeMenu !== navbar.name,
                  'bg-neutral-50 text-neutral-900 dark:bg-neutral-700 dark:text-neutral-200': activeMenu === navbar.name,
                }
              ]}>{navbar.name}</a>
            </li>)}
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
<script is:inline>
  {
    document.getElementById('toggle-menu').addEventListener('click', () => {
      document.getElementById('mobile-menu').classList.toggle('visible');
    });
    document.getElementById('close-menu').addEventListener('click', () => {
      document.getElementById('mobile-menu').classList.toggle('visible');
    });

    window.onclick = (e) => {
      if (e.target.classList.contains('backdrop')) {
        e.target.parentElement.classList.remove('visible');
      }
    };
  }
</script>
